#!/bin/bash
set -e

# use builtkit
export DOCKER_BUILDKIT=0

# get script dir
dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
cd $dir/..

# params
self=$0
container=$1
all=$*

# sanitize
if [[ "$container" = "" ]]; then
    echo "Syntax: ${self} <steam|game|release|all> [--push] [--force]"
    exit 1
fi

# last build version
function last_build_version()
{
    # config
    file=".last-build-version"

    # read version
    if [[ -f $file ]]; then
        version=$(cat $file)
    fi

    # check if we need to force update the build
    if [[ "$all" = *"--force"* ]]; then
        version=""
    fi

    # create new version tag
    if [[ "$version" = "" ]]; then
        version=$(date +"%Y%m%d.%H%M%S")
    fi

    # write version tag
    echo $version > $file

    # return version tag
    echo $version
}

# build container
function build_container()
{
    # params
    container=$1
    prefix="mithrand0/reactive-drop"
    name="${prefix}-server"
    version=$(last_build_version)

    target="Dockerfile"
    if [[ "$container" != "release" ]]; then
        target="docker/${target}.${container}"
        name="${prefix}-base-${container}"
    fi

    # build
    docker build \
        --build-arg build=$version \
        -t $name:$version \
        -t $name:latest \
        -f $target .

    # check if we need to push it
    if [[ "$all" = *"--push"* ]]; then
        docker push $name:$version
        docker push $name:latest
    fi
}

# verify target
case $container in
    all)
        build_container steam
        build_container game
        build_container release
    ;;
    *)
        build_container $container
    ;;
esac

echo "Finished"
